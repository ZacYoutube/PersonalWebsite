{"version":3,"sources":["components/mainPage/Education.jsx"],"names":["Education","theme","useContext","ThemeContext","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","width","setWidth","_useState5","_useState6","mode","setMode","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","education","method","then","res","json","catch","err","window","innerWidth","_jsxs","_Fragment","children","_jsx","Fade","style","className","Container","Chrono","allowDynamicUpdate","useReadMore","items","cardHeight","primary","accentColor","secondary","cardBgColor","chronoTheme","cardForeColor","titleColor","titleColorActive","map","icon","src","alt","FallbackSpinner"],"mappings":"+OA+EeA,UArEf,WACE,IAAMC,EAAQC,qBAAWC,KACzBC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA0BL,mBAAS,QAAOM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAwBT,mBAAS,wBAAuBU,EAAAR,YAAAO,EAAA,GAAjDE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAyBpB,OAvBAG,qBAAU,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdC,MAAMC,IAAUC,UAAW,CACzBC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKrB,EAAQqB,EAAI,IAC1BE,OAAM,SAACC,GAAG,OAAKA,CAAG,KAEX,QAANd,EAAAe,cAAM,IAAAf,OAAA,EAANA,EAAQgB,YAAa,KACvBlB,EAAQ,aAGA,QAANG,EAAAc,cAAM,IAAAd,OAAA,EAANA,EAAQe,YAAa,MAER,QAANd,EAAAa,cAAM,IAAAb,OAAA,EAANA,EAAQc,aAAc,MAAa,QAANb,EAAAY,cAAM,IAAAZ,OAAA,EAANA,EAAQa,YAAa,IAD3DtB,EAAS,SAGM,QAANU,EAAAW,cAAM,IAAAX,OAAA,EAANA,EAAQY,aAAc,MAAa,QAANX,EAAAU,cAAM,IAAAV,OAAA,EAANA,EAAQW,YAAa,KAC3DtB,EAAS,QAETA,EAAS,OAEb,GAAG,IAGDuB,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,SACC/B,EACC+B,cAACC,IAAI,CAAAF,SACHC,cAAA,OAAKE,MAAO,CAAE7B,SAAS8B,UAAU,4BAA2BJ,SAC1DC,cAACI,IAAS,CAAAL,SACRC,cAACK,IAAM,CACLC,oBAAkB,EAClBC,aAAa,EACbC,MAAOvC,EAAKmB,UACZqB,WAAY,IACZhC,KAAMA,EACNf,MAAO,CACLgD,QAAShD,EAAMiD,YACfC,UAAWlD,EAAMiD,YACjBE,YAAanD,EAAMoD,YAAYD,YAC/BE,cAAerD,EAAMoD,YAAYC,cACjCC,WAA4C,SAAhCtD,EAAMoD,YAAYE,WAAwB,QAAU,QAChEC,iBAAkB,SAClBlB,SAEFC,cAAA,OAAKG,UAAU,eAAcJ,SAC1B9B,EAAKmB,UAAU8B,KAAI,SAAC9B,GAAS,OAAMA,EAAU+B,KAC5CnB,cAAA,OAEEoB,IAAKhC,EAAU+B,KAAKC,IACpBC,IAAKjC,EAAU+B,KAAKE,KAFfjC,EAAU+B,KAAKC,KAIpB,IAAI,cAMhBpB,cAACsB,IAAe,MAG1B,C","file":"static/js/3.ad0e1e54.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Chrono } from 'react-chrono';\nimport { Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { ThemeContext } from 'styled-components';\nimport endpoints from '../../constants/resources';\nimport FallbackSpinner from '../helper/FallbackSpinner';\nimport '../../css/education.css';\n\nfunction Education() {\n  const theme = useContext(ThemeContext);\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState('50vw');\n  const [mode, setMode] = useState('VERTICAL_ALTERNATING');\n\n  useEffect(() => {\n    fetch(endpoints.education, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode('VERTICAL');\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth('75vw');\n    } else {\n      setWidth('50vw');\n    }\n  }, []);\n\n  return (\n    <>\n      <br />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              <Chrono\n                allowDynamicUpdate\n                useReadMore={false}\n                items={data.education}\n                cardHeight={250}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.accentColor,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColor: theme.chronoTheme.titleColor == 'black' ? 'white' : 'black',\n                  titleColorActive: 'white'\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.education.map((education) => (education.icon ? (\n                    <img\n                      key={education.icon.src}\n                      src={education.icon.src}\n                      alt={education.icon.alt}\n                    />\n                  ) : null))}\n                </div>\n              </Chrono>\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nexport default Education;\n"],"sourceRoot":""}