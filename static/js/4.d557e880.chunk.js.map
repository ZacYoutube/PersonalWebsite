{"version":3,"sources":["components/mainPage/Experience.jsx"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","theme","useContext","ThemeContext","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","children","_jsx","className","Container","Timeline","lineColor","timelineLineColor","map","item","Fade","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","title","src","logo","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner"],"mappings":"wPAWMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KA8EHK,UA1Ef,WACE,IAAMC,EAAQC,qBAAWC,KACzBC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,UACCf,EAEGe,cAAA,OAAKC,UAAU,4BAA2BF,SACxCC,cAACE,IAAS,CAAAH,SACRC,cAACG,WAAQ,CACPC,UAAW1B,EAAM2B,kBAAkBN,SAElCd,EAAKqB,KAAI,SAACC,GAAI,OACbP,cAACQ,IAAI,CAAAT,SACHF,eAACY,eAAY,CAEXC,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAYlC,EAAMmC,aACpCC,MAAOhD,EAAOU,UACduC,mBAAoB,CAAEC,MAAOtC,EAAMsC,OAAQjB,SAAA,CAE3CC,cAAA,MAAIC,UAAU,aAAYF,SACvBQ,EAAKU,QAERpB,eAAA,OAAKiB,MAAOhD,EAAOI,uBAAuB6B,SAAA,CAIxCC,cAAA,OAAKkB,IAAKX,EAAKY,KAAMlB,UAAWM,EAAKO,QACpCP,EAAKa,UACNvB,eAAA,MAAIiB,MAAOhD,EAAOS,YAAYwB,SAAA,CAAC,WAE5B,IACAQ,EAAKa,eAIVpB,cAAA,MAAIc,MAAOhD,EAAOC,QAAQgC,SACvBQ,EAAKc,gBAAgBf,KAAI,SAACgB,GAAK,OAC9BzB,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAAD,SACEC,cAACuB,IAAa,CACZxB,SAAUuB,EACVE,WAAY,CACVC,EAAG,YAITzB,cAAA,WATQsB,EAUJ,QAlCLf,EAAKU,MAAQV,EAAKG,WAsCpB,UAKbV,cAAC0B,IAAe,MAG5B,C","file":"static/js/4.d557e880.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport endpoints from '../../constants/resources';\nimport FallbackSpinner from '../helper/FallbackSpinner';\nimport '../../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Experience() {\n  const theme = useContext(ThemeContext);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <div />\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item) => (\n                  <Fade>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={{ color: theme.color }}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        {/* <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                          {item.subtitle}\n                        </h4> */}\n                        <img src={item.logo} className={item.style}/>\n                        {item.workType && (\n                        <h5 style={styles.inlineChild}>\n                    &nbsp;Â·\n                          {' '}\n                          {item.workType}\n                        </h5>\n                        )}\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nexport default Experience;\n"],"sourceRoot":""}